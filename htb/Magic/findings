Port 22 and 80 open, all seem normal.
/assets/ and /images/ are revealed
Login page: bypass login with a simple sql injection: 'or'1'='1'#
Allowed to upload files: only jpg, png
Created a reverse shell: rev.php <- could not upload this
Changed it to rev.php.png <- could not upload this
Added reverse shell php code as meta data into img with exiftool -Comment
Upload successful.

where to find and execute the uploaded files.
Pics are visible in the home page.
View source -> uploaded images file are hidden in /images/uploads/
Look for the recently uploaded picture with embedded code
-> Got reverse shell

Prives -> user:
found dbusername and dbpassword cred in db.php5
theseus 
iamkingtheseus

Stuck here for a while.
Maybe tried database dump?
mysqldump -u theseus -p Magic
passwd: iamkingtheseus

DB dumped!
found this: 'admin','Th3s3usW4sK1ng'
su theseus
Th3s3usW4sK1ng

User pwned!

---------------------------------------------------------

Prives to root:

This one took agesssss.
Through enum script, located the file sysinfo at /bin/sysinfo, which prints out the system hardware information, this is a custom binary, does not exist on normal Linux machines.

strace and grep for execve shows the exec syscall. Lots of them do not include full path -> path hijack
[pid 25737] execve("/usr/bin/lshw", ["lshw", "-short"], 0x555a47db6b68 /* 25 vars */) = 0
path name is showed but argument did not show full path.

=> Created a custom reverse shell bash script called lshw.
Reexported the $PATH.
When rerun sysinfo, execve will instead call lshw on current path (high priority) instead of the one in /usr/bin/lshw.
=> reverse shell popped with root privilege.

Root pwned.
